// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pumpk1n_backend.Models.DatabaseContexts;

namespace pumpk1n_backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("pumpk1n_backend.Models.Entities.Accounts.InternalUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("HashedPassword");

                    b.Property<string>("Nonce");

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<bool>("UserIsRoot");

                    b.HasKey("Id");

                    b.ToTable("InternalUser");
                });

            modelBuilder.Entity("pumpk1n_backend.Models.Entities.Accounts.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ActivatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("GoogleOAuthProfileId");

                    b.Property<string>("HashedPassword");

                    b.Property<string>("Nonce");

                    b.Property<string>("PasswordResetCode");

                    b.Property<DateTime?>("PasswordResetCodeIssuedDate");

                    b.Property<DateTime?>("PasswordResetCodeUsedDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime?>("PhoneNumberConfirmedDate");

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("UserActivationCode");

                    b.Property<DateTime?>("UserActivationCodeIssuedDate");

                    b.Property<bool>("UserProfileCompleted");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
